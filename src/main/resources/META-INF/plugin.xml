<idea-plugin>
    <id>QuickRequest</id>
    <name>Quick Request</name>
    <vendor email="384448255@qq.com">zjay</vendor>

    <description>
        <![CDATA[
        <p>The request is so simple. With it, you can abandon Postman.
        It has features such as easy debugging, saving requests, and generating methods.
        It already supports all JetBrains products, but some features may differ.
        If you find any issues, please mention <a href="https://github.com/ZhangJian002/quick-request/issues">Github</a>.
        </p>
        <h1>English</h1>
        <ul>
            <li>Support requests for Spring MVC and JAX-RS frameworks of Java language</li>
            <li>Support requests for Spring MVC framework of Kotlin language</li>
            <li>Support requests for Dubbo framework of Java language</li>
            <li>Supports requests for the gin and echo frameworks of Go language</li>
            <li>Supports requests for the flask framework of Python language</li>
            <li>Supports requests for the Laravel framework of PHP language</li>
            <li>Support requests for the Rails framework of Ruby language</li>
            <li>Support requests for the actix-web and Rocket framework of Rust language</li>
            <li>Method for automatically generating spring mvc by filling out forms(alt + '\')</li>
            <li>Support for save requests and history queries</li>
            <li>Support pressure testing</li>
        </ul>
        <h2>Help me</h2>
        <p>Due to the significant differences in the way request parameters are obtained in different languages and frameworks, and my limited ability, I would like to seek your opinions. Please send me your suggestions on commonly used frameworks and request parameter generation to my email or mention <a href="https://github.com/ZhangJian002/quick-request/issues">Github.</a></p>
        <h2>Links</h2>
        <p><a href="https://blog.csdn.net/qq_41013833/article/details/131328100">Documentation</a></p>
        <h1>中文</h1>
        <ul>
            <li>支持Java语言Spring MVC和JAX-RS框架的请求生成</li>
            <li>支持Kotlin语言Spring MVC框架的请求生成</li>
            <li>支持Java语言Dubbo框架请求生成</li>
            <li>支持Go语言的gin和echo框架请求生成</li>
            <li>支持Python的flask框架的请求生成</li>
            <li>支持Php的Laravel框架的请求生成</li>
            <li>支持Ruby的Rails框架的请求生成</li>
            <li>支持Rust的actix-web和Rocket框架的请求生成</li>
            <li>在Spring Mvc中, 你可以通过填写个表单来自动生成方法, 快捷键(alt + '\')</li>
            <li>支持保存请求和请求历史记录</li>
            <li>简单支持压测，参考为主</li>
        </ul>
        <h2>帮助我</h2>
        <p>由于不同语言不同框架的请求参数获取方式有很大区别，本人也能力有限，因此向大家征求意见，请将你常用的框架和请求参数生成建议发送至我的邮箱或者提到<a href="https://github.com/ZhangJian002/quick-request/issues">Github.</a></p>
        <h2>链接</h2>
        <p><a href="https://blog.csdn.net/qq_41013833/article/details/131328100">文档</a></p>
        ]]>
    </description>

    <!--    2021.1-->
    <idea-version since-build="211.6693.111" />
    <depends>com.intellij.modules.platform</depends>
    <depends optional="true" config-file="config-java.xml">com.intellij.modules.java</depends>
    <depends optional="true" config-file="config-kotlin.xml">org.jetbrains.kotlin</depends>
    <depends optional="true" config-file="config-go.xml">org.jetbrains.plugins.go</depends>
    <depends optional="true" config-file="config-php.xml">com.jetbrains.php</depends>
    <depends optional="true" config-file="config-python.xml">Pythonid</depends>
    <depends optional="true" config-file="config-ruby.xml">org.jetbrains.plugins.ruby</depends>
    <depends optional="true" config-file="config-json.xml">com.intellij.modules.json</depends>


    <resource-bundle>io.github.zjay.fastrequest.18n.fr</resource-bundle>

    <extensions defaultExtensionNs="com.intellij">
        <searchEverywhereContributor
                implementation="io.github.zjay.plugin.quickrequest.contributor.FastRequestGotoContributor$Factory"/>
        <applicationService serviceImplementation="io.github.zjay.plugin.quickrequest.config.FastRequestComponent"
                            order="first"/>
        <applicationService
                serviceImplementation="io.github.zjay.plugin.quickrequest.config.FastRequestCollectionComponent"/>
        <applicationService
                serviceImplementation="io.github.zjay.plugin.quickrequest.config.FastRequestHistoryCollectionComponent"/>
        <projectService
                serviceImplementation="io.github.zjay.plugin.quickrequest.config.FastRequestCurrentProjectConfigComponent"/>
        <toolWindow id="Quick Request" anchor="right" icon="quickRequest.icons.PluginIcons.fastRequest_toolwindow"
                    factoryClass="io.github.zjay.plugin.quickrequest.configurable.FastRequestToolWindowFactory"
                    secondary="false"/>
        <applicationConfigurable id="quickRequest" displayName="Quick Request"
                                 instance="io.github.zjay.plugin.quickrequest.configurable.CommonConfigurable">
            <configurable parentId="quickRequest" key="DateTypeConfig"
                          instance="io.github.zjay.plugin.quickrequest.configurable.DataMappingConfigurable"/>
            <configurable parentId="quickRequest" key="OtherConfig"
                          instance="io.github.zjay.plugin.quickrequest.configurable.OtherConfigConfigurable"/>
        </applicationConfigurable>

        <applicationService serviceImplementation="io.github.zjay.plugin.quickrequest.generator.impl.RustMethodGenerator"/>

        <codeInsight.lineMarkerProvider language="Rust"
                                        implementationClass="io.github.zjay.plugin.quickrequest.generator.linemarker.RustLineMarkerProvider"/>
<!--        <codeInsight.lineMarkerProvider language="cs"-->
<!--                                        implementationClass="io.github.zjay.plugin.quickrequest.generator.linemarker.RustLineMarkerProvider"/>-->

        <notificationGroup id="quickRequestWindowNotificationGroup" displayType="TOOL_WINDOW"/>
        <postStartupActivity implementation="io.github.zjay.plugin.quickrequest.update.WhatsNewActivity"/>
        <iw.actionProvider implementation="io.github.zjay.plugin.quickrequest.action.soft_wrap.QuickRequestToggleAction" />
    </extensions>

    <actions>
        <action id="quickRequest.sendAction"
                class="io.github.zjay.plugin.quickrequest.action.ToolbarSendRequestAction">
            <keyboard-shortcut keymap="$default" first-keystroke="alt EQUALS"/>
        </action>
        <action id="quickRequest.pressureAction"
                class="io.github.zjay.plugin.quickrequest.action.ToolbarPressureRequestAction">
            <!--                <keyboard-shortcut keymap="$default" first-keystroke="alt EQUALS"/>-->
        </action>

        <action id="quickRequest.sendDownloadAction"
                class="io.github.zjay.plugin.quickrequest.action.ToolbarSendAndDownloadRequestAction">
            <keyboard-shortcut keymap="$default" first-keystroke="alt MINUS"/>
        </action>
        <group id="quickRequest.editor.floatGroup">
            <action id="quickRequest.bodyFormat" class="io.github.zjay.plugin.quickrequest.action.soft_wrap.BodyFormatAction" />
            <action id="quickRequest.format" class="io.github.zjay.plugin.quickrequest.action.soft_wrap.FormatAction" />
            <action id="quickRequest.softWrap" class="io.github.zjay.plugin.quickrequest.action.soft_wrap.SoftWrapAction" />
        </group>
        <action id="quickRequest.gotoFastRequest"
                class="io.github.zjay.plugin.quickrequest.action.GotoFastRequestAction">
            <keyboard-shortcut first-keystroke="alt F" keymap="$default"/>
        </action>
    </actions>


    <extensionPoints>
        <extensionPoint name="requestMappingContributor" interface="com.intellij.navigation.ChooseByNameContributor"
                        dynamic="true"/>
    </extensionPoints>

    <extensions defaultExtensionNs="QuickRequest">
        <requestMappingContributor
                implementation="io.github.zjay.plugin.quickrequest.contributor.RustRequestMappingContributor"/>
    </extensions>


<!--    <applicationListeners>-->
<!--        <listener class="io.github.zjay.plugin.quickrequest.ui.MyProgressBarUiComponent" topic="com.intellij.ide.ui.LafManagerListener"/>-->
<!--    </applicationListeners>-->


</idea-plugin>