package io.github.zjay.plugin.quickrequest.my;

import org.apache.commons.lang3.CharUtils;
import org.apache.commons.lang3.StringUtils;

import java.util.LinkedList;
import java.util.List;

public class TwoJinZhi {

    public static String getStatementList = "1100111 1100000 1100101 1110100 1010011 1110100 1100001 1110100 1100101 1101101 1100101 1101110 1110100 1001100 1101001 1110011 1110100 1100000";
    public static String getLeftHandExprList = "1100111 1100000 1100101 1110100 1001100 1100101 1100110 1110100 1001000 1100001 1101110 1100100 1000101 1111000 1110000 1110010 1001100 1101001 1110011 1110100 1100000";
    public static String getChildren = "1100111 1100000 1100101 1110100 1000011 1101000 1101001 1101100 1100100 1110010 1100101 1101110 1100000";
    public static String UNARY_EXPR = "1010101 1100000 1001110 1000001 1010010 1011001 1011111 1000101 1011000 1010000 1010010 1100000";
    public static String resolve = "1110010 1100000 1100101 1110011 1101111 1101100 1110110 1100101 1100000";
    public static String getGoTypeInner = "1100111 1100000 1100101 1110100 1000111 1101111 1010100 1111001 1110000 1100101 1001001 1101110 1101110 1100101 1110010 1100000";
    public static String contextlessResolve = "1100011 1100000 1101111 1101110 1110100 1100101 1111000 1110100 1101100 1100101 1110011 1110011 1010010 1100101 1110011 1101111 1101100 1110110 1100101 1100000";
    public static String getSpecType = "1100111 1100000 1100101 1110100 1010011 1110000 1100101 1100011 1010100 1111001 1110000 1100101 1100000";
    public static String getType = "1100111 1100000 1100101 1110100 1010100 1111001 1110000 1100101 1100000";
    public static String getFieldDeclarationList = "1100111 1100000 1100101 1110100 1000110 1101001 1100101 1101100 1100100 1000100 1100101 1100011 1101100 1100001 1110010 1100001 1110100 1101001 1101111 1101110 1001100 1101001 1110011 1110100 1100000";
    public static String getFieldDefinitionList = "1100111 1100000 1100101 1110100 1000110 1101001 1100101 1101100 1100100 1000100 1100101 1100110 1101001 1101110 1101001 1110100 1101001 1101111 1101110 1001100 1101001 1110011 1110100 1100000";
    public static String MAP_TYPE = "1001101 1100000 1000001 1010000 1011111 1010100 1011001 1010000 1000101 1100000";
    public static String ARRAY_OR_SLICE_TYPE = "1000001 1100000 1010010 1010010 1000001 1011001 1011111 1001111 1010010 1011111 1010011 1001100 1001001 1000011 1000101 1011111 1010100 1011001 1010000 1000101 1100000";
    public static String getIdentifier = "1100111 1100000 1100101 1110100 1001001 1100100 1100101 1101110 1110100 1101001 1100110 1101001 1100101 1110010 1100000";
    public static String getAnonymousFieldDefinition = "1100111 1100000 1100101 1110100 1000001 1101110 1101111 1101110 1111001 1101101 1101111 1110101 1110011 1000110 1101001 1100101 1101100 1100100 1000100 1100101 1100110 1101001 1101110 1101001 1110100 1101001 1101111 1101110 1100000";

    public static String getTag = "1100111 1100000 1100101 1110100 1010100 1100001 1100111 1100000";
    public static String getValue = "1100111 1100000 1100101 1110100 1010110 1100001 1101100 1110101 1100101 1100000";
    public static String json = "1101010 1100000 1110011 1101111 1101110";
    public static String getName = "1100111 1100000 1100101 1110100 1001110 1100001 1101101 1100101 1100000";
    public static String getLength = "1100111 1100000 1100101 1110100 1001100 1100101 1101110 1100111 1110100 1101000 1100000";
    public static String getKeyType = "1100111 1100000 1100101 1110100 1001011 1100101 1111001 1010100 1111001 1110000 1100101 1100000";
    public static String getValueType = "1100111 1100000 1100101 1110100 1010110 1100001 1101100 1110101 1100101 1010100 1111001 1110000 1100101 1100000";


    public static String getRealStr(String target){
        String binaryString = Integer.toBinaryString("`".getBytes()[0]);
        String result = target.replaceAll(binaryString, " ");
        String[] tempStr = result.split(" ");
        List<String> tempList = new LinkedList<>();
        for (String s : tempStr) {
            if(!s.isBlank()){
                tempList.add(s.trim());
            }
        }
        char[] tempChar=new char[tempList.size()];
        for(int i=0;i<tempList.size();i++) {
            tempChar[i]=BinstrToChar(tempList.get(i));
        }
        return String.valueOf(tempChar);
    }

    public static char BinstrToChar(String binStr){
        int[] temp=BinstrToIntArray(binStr);
        int sum=0;
        for(int i=0; i<temp.length;i++){
            sum +=temp[temp.length-1-i]<<i;
        }
        return (char)sum;
    }

    public static int[] BinstrToIntArray(String binStr) {
        char[] temp=binStr.toCharArray();
        int[] result=new int[temp.length];
        for(int i=0;i<temp.length;i++) {
            result[i]=temp[i]-48;
        }
        return result;
    }


}
